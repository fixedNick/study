namespace Binary.MathOperations
{
    class BinaryCycles
    {
        public static void Main()
        {
            byte val = 123;
            for (int t = 128; t > 0; t /= 2)
            {
                if ((val & t) == 0) Console.Write("0 ");
                else Console.Write("1 ");
            }
        }
    }
}

// Result: 0 1 1 1 1 0 1 1

//123 / 2 = 60    | 1
//61 / 2 = 30     | 1
//30 / 2 = 15     | 0
//15 / 2 = 7      | 1
//7 / 2 = 3       | 1
//3 / 2 = 1       | 1
//1

//123[ 10 -> 2 ] = 1 1 1 1 0 1 1 

//128 | 1 0 0 0 0 0 0 0
//64  | 1 0 0 0 0 0 0
//32  | 1 0 0 0 0 0
//16  | 1 0 0 0 0
//8   | 1 0 0 0
//4   | 1 0 0
//2   | 1 0
//1   | 0 1

//&

//  1 1 1 1 0 1 1
//1 0 0 0 0 0 0 0
//_______________
//0 0 0 0 0 0 0 0 | 0

//1 1 1 1 0 1 1
//1 0 0 0 0 0 0
//_____________
//1 0 0 0 0 0 0 | 1

//1 1 1 1 0 1 1
//  1 0 0 0 0 0
//_____________
//0 1 0 0 0 0 0 | 1

//1 1 1 1 0 1 1
//    1 0 0 0 0
//_____________
//0 0 1 0 0 0 0 | 1

//1 1 1 1 0 1 1
//      1 0 0 0
//_____________
//0 0 0 1 0 0 0 | 1

//1 1 1 1 0 1 1
//        1 0 0
//_____________
//0 0 0 0 0 0 0 | 0

//1 1 1 1 0 1 1
//          1 0
//_____________
//0 0 0 0 0 1 0 | 1

//1 1 1 1 0 1 1
//          0 1
//_____________
//0 0 0 0 0 0 1 | 1



//0 1 1 1 1 0 1 1 : RESULT